- name: create ec2 and r53 records
  hosts: local
  connection: local
  vars:
    subnet_id: subnet-0bc41aa50c0fccefc
    sg_id: "sg-0b9fd6aabf64f5c40"
    ami_id: "ami-09c813fb71547fc4f"
    instances:
    - mysql
    - backend
    - fronted
    zone: learnaws.space

  tasks:
  - name: create ec2 instances
    amazon.aws.ec2_instance:
      name: "{{ item }}"
      vpc_subnet_id: "{{ subnet_id }}"
      instance_type: "t2.micro"
      security_group: "{{ sg_id }}"
      image_id: "{{ ami_id }}"
    loop: "{{ instances }}"
    register: ec2_instances

  - name: print the output
    ansible.builtin.debug:
     msg: "{{ ec2_instances }}"

    # private IPs r53
  - name: create r53 private record
    amazon.aws.route53:
      state: present
      zone: "{{ zone }}"
      record: "{{ item.item }}.{{ zone }}" # mysql.learnaws.space
      type: A
      ttl: 1
      value: "{{ item.instances[0].private_ip_address }}"
      wait: true
      overwrite: true 
    loop: "{{ec2_instances.results }}"

     # public IPs r53
  - name: create r53 public record
    amazon.aws.route53:
      state: present
      zone: "{{ zone }}"
      record: "{{ item.item }}.{{ zone }}" # frontend.learnaws.space
      type: A
      ttl: 1
      value: "{{ item.instances[0].public_ip_address }}"
      wait: true
      overwrite: true 
    loop: "{{ec2_instances.results }}"
    when: item.item == "frontend"
  # Make sure that dependencies installed or not or else install it
  # pip3.9 install boto3 botocor
